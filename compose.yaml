services:


  postgres:
    image: 'postgres:latest'
    container_name: 'postgres-db'
    environment:
      - 'POSTGRES_DB=omega_db'
      - 'POSTGRES_PASSWORD=omega'
      - 'POSTGRES_USER=omega'
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -d omega_db -U omega"
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.7.2'
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZK_DATA_DIR: /var/lib/zookeeper/data
    volumes:
      - 'zookeeper_data:/var/lib/zookeeper'

  kafka1:
    depends_on:
      - zookeeper
    image: 'confluentinc/cp-kafka:7.7.2'
    container_name: kafka1
    ports:
      - "29092:29092"
      - "9092:9092"
    expose:
      - 9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://${LOCAL_ENV_HOST:-localhost}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 6

  kafka2:
    depends_on:
      - zookeeper
    image: 'confluentinc/cp-kafka:7.7.2'
    container_name: kafka2
    ports:
      - "29093:29093"
      - "9093:9093"
    expose:
      - 9093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://${LOCAL_ENV_HOST:-localhost}:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 6

  kafka3:
    depends_on:
      - zookeeper
    image: 'confluentinc/cp-kafka:7.7.2'
    container_name: kafka3
    ports:
      - "29094:29094"
      - "9094:9094"
    expose:
      - 9094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://${LOCAL_ENV_HOST:-localhost}:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 6

  eureka-server:
    build: ./eureka-server
    ports:
      - '8761:8761'
    healthcheck:
      test: "curl --silent --fail http://localhost:8761/actuator/health | grep '\"status\":\"UP\"' || exit 1"
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy


  config-server:
    build: ./config-server
    ports:
      - "8800:8800"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800
      ACTIVE_PROFILE: dev
      SPRING_PAGE: 5
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres-db:5432/omega_db'
      SPRING_DATASOURCE_USERNAME: 'omega'
      SPRING_DATASOURCE_PASSWORD: 'omega'
      SPRING_FLYWAY_ENABLED: 'true'
      API_PREFIX: '/api/v1'
      JWT_SECRET: 'aboba'
    healthcheck:
      test: "curl --silent --fail config-server:8800/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gateway-server:
    build: ./gateway-server
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800


  auth-service:
    build: ./auth-service
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  tag-service:
    build:
      context: .
      dockerfile: ./tag-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  studio-service:
    build:
      context: .
      dockerfile: ./studio-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  rating-service:
    build:
      context: .
      dockerfile: ./rating-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  review-service:
    build:
      context: .
      dockerfile: ./review-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  content-service:
    build:
      context: .
      dockerfile: ./content-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800

  notification-service:
    build:
      context: .
      dockerfile: ./notification-service/Dockerfile
    ports:
      - "8065:8065"
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800
volumes:
  postgres_data:
  zookeeper_data: