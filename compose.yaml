services:


  postgres:
    image: 'postgres:latest'
    container_name: 'postgres-db'
    environment:
      - 'POSTGRES_DB=omega_db'
      - 'POSTGRES_PASSWORD=omega'
      - 'POSTGRES_USER=omega'
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -d omega_db -U omega"
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'


  eureka-server:
    build: ./eureka-server
    ports:
      - '8761:8761'
    healthcheck:
      test: "curl --silent --fail http://localhost:8761/actuator/health | grep '\"status\":\"UP\"' || exit 1"
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy


  config-server:
    build: ./config-server
    ports:
      - "8800:8800"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800
      ACTIVE_PROFILE: dev
      SPRING_PAGE: 5
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres-db:5432/omega_db'
      SPRING_DATASOURCE_USERNAME: 'omega'
      SPRING_DATASOURCE_PASSWORD: 'omega'
      SPRING_FLYWAY_ENABLED: 'true'
      API_PREFIX: '/api/v1'
      JWT_SECRET: 'aboba'
    healthcheck:
      test: "curl --silent --fail config-server:8800/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gateway-server:
    build: ./gateway-server
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800
      ACTIVE_PROFILE: dev


  tag-service:
    build: ./tag-service
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_URL: http://config-server:8800


#  spring-app:
#    image: omegapoisk:latest
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      SPRING_PAGE: 5
#      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres-db:5432/omega_db'
#      SPRING_DATASOURCE_USERNAME: 'omega'
#      SPRING_DATASOURCE_PASSWORD: 'omega'
#      SPRING_FLYWAY_ENABLED: 'true'
#      API_PREFIX: '/api/v1'
#      JWT_SECRET: 'aboba'
#    depends_on:
#      postgres:
#        condition: service_healthy
#    ports:
#      - '8080:8080'
#    networks:
#      - springboot-network


networks:
  springboot-network:
    driver: bridge

volumes:
  postgres_data: